{"ast":null,"code":"var _jsxFileName = \"/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { storage } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageUpload() {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\");\n\n  function handleChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function handleUpload(e) {\n    e.preventDefault();\n    const uploadTask = storage.ref(`/images/${file.name}`).put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      console.log('Upload is ' + progress + '% done');\n      setProgress(progress);\n    }, err => {\n      // error catcher\n      console.log(err);\n    }, () => {\n      // Handle successful uploads on complete\n      storage.ref(\"images\").child(file.name).getDownloadURL().then(url => {\n        setFile(null);\n        setURL(url);\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n      }); // PROGRESS RESET\n\n      setProgress(0);\n      setCaption(\"\");\n      setImage(null);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description...\",\n        onChange: event => setCaption(event.target.value),\n        value: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !file,\n        children: \"upload to firebase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"hEh0J3SnJJE/ANDurQdKwWgn15o=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js"],"names":["React","useState","storage","ImageUpload","file","setFile","url","setURL","handleChange","e","target","files","handleUpload","preventDefault","uploadTask","ref","name","put","on","console","log","error","progress","Math","round","snapshot","bytesTransferred","totalBytes","setProgress","err","child","getDownloadURL","then","db","collection","add","timestamp","firebase","firestore","FieldValue","serverTimestamp","caption","imageUrl","username","setCaption","setImage","event","value"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { storage } from \"../firebase\";\n\nexport default function ImageUpload() {\n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\");\n\n  function handleChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function handleUpload(e) {\n    e.preventDefault();\n    const uploadTask = storage.ref(`/images/${file.name}`).put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n        const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            console.log('Upload is ' + progress + '% done');\n            setProgress(progress);\n        }, (err) => {\n            // error catcher\n            console.log(err);\n        }, () => {\n        // Handle successful uploads on complete\n      storage\n        .ref(\"images\")\n        .child(file.name)\n        .getDownloadURL()\n        .then((url) => {\n          setFile(null);\n          setURL(url);\n          db.collection(\"posts\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            caption: caption,\n            imageUrl: url,\n            username: username\n        });\n        });\n                        // PROGRESS RESET\n                        setProgress(0);\n                        setCaption(\"\")\n                        setImage(null);\n    });\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleUpload}>\n      <progress value={progress} max=\"100\" />\n      <input \n                type=\"text\" \n                placeholder=\"Description...\" \n                onChange={event => setCaption(event.target.value)}\n                value={caption} \n                />\n        <input type=\"file\" onChange={handleChange} />\n        <button disabled={!file}>upload to firebase</button>\n      </form>\n      <img src={url} alt=\"\" />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}