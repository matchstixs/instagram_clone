{"ast":null,"code":"var _jsxFileName = \"/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport firebase from 'firebase';\nimport { storage, db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload({\n  username\n}) {\n  _s();\n\n  const [image, setImage] = useState([0]);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\");\n\n  function handleChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function handleUpload(e) {\n    e.preventDefault();\n    const uploadTask = storage.ref(`/images/${file.name}`).put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      console.log('Upload is ' + progress + '% done');\n      setProgress(progress);\n    }, err => {\n      // error catcher\n      console.log(err);\n    }, () => {\n      // Handle successful uploads on complete\n      storage.ref(\"images\").child(file.name).getDownloadURL().then(url => {\n        setFile(null);\n        setURL(url);\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n      }); // PROGRESS RESET\n\n      setProgress(0);\n      setCaption(\"\");\n      setImage(null);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description...\",\n        onChange: event => setCaption(event.target.value),\n        value: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !file,\n        children: \"upload to firebase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUpload, \"DJ3ZGFh6Z2RlSklGAlZyc4IeVZ8=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js"],"names":["React","useState","Button","firebase","storage","db","ImageUpload","username","image","setImage","progress","setProgress","caption","setCaption","file","setFile","url","setURL","handleChange","e","target","files","handleUpload","preventDefault","uploadTask","ref","name","put","on","console","log","error","Math","round","snapshot","bytesTransferred","totalBytes","err","child","getDownloadURL","then","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","event","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Button} from \"@material-ui/core\";\nimport firebase from 'firebase';\nimport { storage, db } from '../firebase';\n\nfunction ImageUpload ({username})  {\n    const [image, setImage] = useState([0]);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n\n\n    \n      const [file, setFile] = useState(null);\n      const [url, setURL] = useState(\"\");\n    \n      function handleChange(e) {\n        setFile(e.target.files[0]);\n      }\n    \n      function handleUpload(e) {\n        e.preventDefault();\n        const uploadTask = storage.ref(`/images/${file.name}`).put(file);\n        uploadTask.on(\"state_changed\", console.log, console.error, () => {\n            const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                console.log('Upload is ' + progress + '% done');\n                setProgress(progress);\n            }, (err) => {\n                // error catcher\n                console.log(err);\n            }, () => {\n            // Handle successful uploads on complete\n          storage\n            .ref(\"images\")\n            .child(file.name)\n            .getDownloadURL()\n            .then((url) => {\n              setFile(null);\n              setURL(url);\n              db.collection(\"posts\").add({\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                caption: caption,\n                imageUrl: url,\n                username: username\n            });\n            });\n                            // PROGRESS RESET\n                            setProgress(0);\n                            setCaption(\"\")\n                            setImage(null);\n        });\n      }\n    \n      return (\n        <div>\n          <form onSubmit={handleUpload}>\n          <progress value={progress} max=\"100\" />\n          <input \n                    type=\"text\" \n                    placeholder=\"Description...\" \n                    onChange={event => setCaption(event.target.value)}\n                    value={caption} \n                    />\n            <input type=\"file\" onChange={handleChange} />\n            <button disabled={!file}>upload to firebase</button>\n          </form>\n          <img src={url} alt=\"\" />\n        </div>\n      );\n    }"]},"metadata":{},"sourceType":"module"}