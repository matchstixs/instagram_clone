{"ast":null,"code":"var _jsxFileName = \"/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = () => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n  const [imageAsFile, setImageAsFile] = useState(''); // image handler\n\n  const handleImage = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageAsFile => image);\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`posts/${imageAsFile.name}`).put(imageAsFile);\n    uploadTask.on('state_changed', snapshot => {\n      // progress function\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, err => {\n      // error catcher\n      console.log(err);\n    }, () => {\n      // uploads to firebase storage\n      storage.ref(\"images\").child(imageAsFile.name).getDownloadURL().then(url => {\n        // Add a new document with a generated id\n        db.collection(\"image\").add({\n          caption: caption,\n          imageUrl: url\n        }); // PROGRESS RESET\n\n        setProgress(0);\n        setCaption(\"\");\n        setImageAsFile(null);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description...\",\n        onChange: event => setCaption(event.target.value),\n        value: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageUpload, \"+/EYa4c2zIQNnBR13em0YE7sYHc=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/matchstix/Documents/devops/Projects/currentProject/instagram_clone/client/src/components/ImageUpload.js"],"names":["React","useState","Button","storage","db","ImageUpload","progress","setProgress","caption","setCaption","imageAsFile","setImageAsFile","handleImage","e","image","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","err","console","log","child","getDownloadURL","then","url","collection","add","imageUrl","event","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAE,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAHqB,CAKrB;;AACA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAL,IAAAA,cAAc,CAACD,WAAW,IAAKI,KAAjB,CAAd;AACH,GAHF;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,SAAQT,WAAW,CAACU,IAAK,EAAtC,EAAyCC,GAAzC,CAA6CX,WAA7C,CAAnB;AAEAQ,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EACCC,QAAD,IAAc;AACV;AACA,YAAMjB,QAAQ,GAAGkB,IAAI,CAACC,KAAL,CAChBF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADnC,CAAjB;AAGApB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAPD,EAOIsB,GAAD,IAAS;AACR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVD,EAUG,MAAM;AACL;AACAzB,MAAAA,OAAO,CACFgB,GADL,CACS,QADT,EAEKY,KAFL,CAEWrB,WAAW,CAACU,IAFvB,EAGKY,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACb;AACA9B,QAAAA,EAAE,CAAC+B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACnB5B,UAAAA,OAAO,EAAEA,OADU;AAEnB6B,UAAAA,QAAQ,EAAEH;AAFS,SAA3B,EAFa,CAOb;;AACA3B,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAE,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,cAAc,CAAC,IAAD,CAAd;AACC,OAfL;AAgBH,KA5BD;AA6BH,GAhCD;;AAmCA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAU,QAAA,KAAK,EAAEL,QAAjB;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,WAAW,EAAC,gBAFZ;AAGA,QAAA,QAAQ,EAAEgC,KAAK,IAAI7B,UAAU,CAAC6B,KAAK,CAACvB,MAAN,CAAawB,KAAd,CAH7B;AAIA,QAAA,KAAK,EAAE/B;AAJP;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEI;AAA7B;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA/DD;;GAAMZ,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Button} from \"@material-ui/core\";\nimport { storage, db } from '../firebase';\n\nconst ImageUpload =() => {\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n    const [imageAsFile, setImageAsFile] = useState('')\n\n    // image handler\n    const handleImage = (e) => {\n         const image = e.target.files[0]\n         setImageAsFile(imageAsFile => (image))\n     };\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`posts/${imageAsFile.name}`).put(imageAsFile);\n        \n        uploadTask.on('state_changed',\n        (snapshot) => {\n            // progress function\n            const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            setProgress(progress);\n        }, (err) => {\n            // error catcher\n            console.log(err);\n        }, () => {\n            // uploads to firebase storage\n            storage\n                .ref(\"images\")\n                .child(imageAsFile.name)\n                .getDownloadURL()\n                .then(url => {\n                // Add a new document with a generated id\n                db.collection(\"image\").add({\n                        caption: caption,\n                        imageUrl: url\n                })\n                \n                // PROGRESS RESET\n                setProgress(0);\n                setCaption(\"\")\n                setImageAsFile(null);\n                })\n        })\n    };\n\n\n    return (\n        <div>\n            <div>\n                <progress value={progress} max=\"100\" />\n                <input \n                type=\"text\" \n                placeholder=\"Description...\" \n                onChange={event => setCaption(event.target.value)}\n                value={caption} \n                />\n                {/* image input */}\n                <input type=\"file\" onChange={handleImage} />\n                <Button onClick={handleUpload}>Upload</Button>\n            </div>\n        </div>\n    );\n\n}\n\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}